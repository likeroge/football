[{"/home/egor/Projects/React/soccer_stat/src/pages/MatchesListPage.jsx":"1","/home/egor/Projects/React/soccer_stat/src/index.js":"2","/home/egor/Projects/React/soccer_stat/src/pages/LeagueTeamsPage.jsx":"3","/home/egor/Projects/React/soccer_stat/src/containers/TeamInfoContainer.js":"4","/home/egor/Projects/React/soccer_stat/src/containers/LeaguesContainer.js":"5","/home/egor/Projects/React/soccer_stat/src/containers/TeamsContainer.js":"6","/home/egor/Projects/React/soccer_stat/src/components/Main.jsx":"7","/home/egor/Projects/React/soccer_stat/src/components/MatchesList.jsx":"8","/home/egor/Projects/React/soccer_stat/src/components/TeamMatchesFormComponent.jsx":"9","/home/egor/Projects/React/soccer_stat/src/components/LeaguesList.jsx":"10","/home/egor/Projects/React/soccer_stat/src/components/TeamList.jsx":"11","/home/egor/Projects/React/soccer_stat/src/components/Match.jsx":"12","/home/egor/Projects/React/soccer_stat/src/components/TeamComponent.jsx":"13","/home/egor/Projects/React/soccer_stat/src/App.js":"14","/home/egor/Projects/React/soccer_stat/src/components/Toolbar.jsx":"15","/home/egor/Projects/React/soccer_stat/src/pages/LeaguesPage.jsx":"16","/home/egor/Projects/React/soccer_stat/src/containers/MatchesListContainer.js":"17","/home/egor/Projects/React/soccer_stat/src/components/Head.jsx":"18","/home/egor/Projects/React/soccer_stat/src/pages/HomePage.jsx":"19","/home/egor/Projects/React/soccer_stat/src/components/League.jsx":"20","/home/egor/Projects/React/soccer_stat/src/components/SeasonPicker.jsx":"21","/home/egor/Projects/React/soccer_stat/src/components/TeamInfoComponent.jsx":"22","/home/egor/Projects/React/soccer_stat/src/pages/TodaysMatchesPage.jsx":"23","/home/egor/Projects/React/soccer_stat/src/api/index.js":"24","/home/egor/Projects/React/soccer_stat/src/pages/TeamInfoPage.jsx":"25"},{"size":195,"mtime":1613135588010,"results":"26","hashOfConfig":"27"},{"size":305,"mtime":1612119600708,"results":"28","hashOfConfig":"27"},{"size":207,"mtime":1613298385195,"results":"29","hashOfConfig":"27"},{"size":2466,"mtime":1613307729120,"results":"30","hashOfConfig":"27"},{"size":1900,"mtime":1613307729116,"results":"31","hashOfConfig":"27"},{"size":1402,"mtime":1613307729116,"results":"32","hashOfConfig":"27"},{"size":1096,"mtime":1613120868638,"results":"33","hashOfConfig":"27"},{"size":588,"mtime":1613227843711,"results":"34","hashOfConfig":"27"},{"size":1062,"mtime":1613227843711,"results":"35","hashOfConfig":"27"},{"size":392,"mtime":1613128431259,"results":"36","hashOfConfig":"27"},{"size":384,"mtime":1613301030405,"results":"37","hashOfConfig":"27"},{"size":2472,"mtime":1613307502172,"results":"38","hashOfConfig":"27"},{"size":534,"mtime":1613307612312,"results":"39","hashOfConfig":"27"},{"size":1203,"mtime":1613307749280,"results":"40","hashOfConfig":"27"},{"size":2853,"mtime":1613121127724,"results":"41","hashOfConfig":"27"},{"size":208,"mtime":1613132170541,"results":"42","hashOfConfig":"27"},{"size":2538,"mtime":1613307729116,"results":"43","hashOfConfig":"27"},{"size":899,"mtime":1613307819780,"results":"44","hashOfConfig":"27"},{"size":200,"mtime":1612885523535,"results":"45","hashOfConfig":"27"},{"size":1376,"mtime":1613299197690,"results":"46","hashOfConfig":"27"},{"size":758,"mtime":1613303119066,"results":"47","hashOfConfig":"27"},{"size":1162,"mtime":1613120576785,"results":"48","hashOfConfig":"27"},{"size":285,"mtime":1612885487547,"results":"49","hashOfConfig":"27"},{"size":474,"mtime":1613327629145,"results":"50","hashOfConfig":"27"},{"size":213,"mtime":1613191892943,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1drmpxs",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/egor/Projects/React/soccer_stat/src/pages/MatchesListPage.jsx",[],"/home/egor/Projects/React/soccer_stat/src/index.js",[],["111","112"],"/home/egor/Projects/React/soccer_stat/src/pages/LeagueTeamsPage.jsx",[],"/home/egor/Projects/React/soccer_stat/src/containers/TeamInfoContainer.js",["113"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchData } from \"../api\";\nimport { MatchesList } from \"../components/MatchesList\";\nimport { TeamInfoComponent } from \"../components/TeamInfoComponent\";\nimport { TeamMatchesFormComponent } from \"../components/TeamMatchesFormComponent\";\n\nexport const TeamInfoContainer = () => {\n  let { teamId } = useParams();\n  const [teamInfo, setTeamInfo] = useState({});\n  const [squad, setSquad] = useState([]);\n  const [coach, setCoach] = useState(\"\");\n  // const[leagueName, setLeagueName] = useState('')\n\n  const [matches, setMatches] = useState([]);\n\n  //Dates\n  const today = new Date().toISOString().slice(0, 10);\n  let nextDate = new Date();\n  nextDate.setDate(nextDate.getDate() + 6);\n  const formatedNextDate = nextDate.toISOString().slice(0, 10);\n\n  //Matches form\n  const [from, setFrom] = useState(today);\n  const [to, setTo] = useState(formatedNextDate);\n\n  useEffect(() => {\n    (async () => {\n      const teamInfo = await fetchData(`teams/${teamId}`);\n      setTeamInfo(teamInfo);\n      setSquad(teamInfo?.squad);\n      const fetchedCoach = await teamInfo.squad?.find(\n        (person) => person.role === \"COACH\"\n      ).name;\n      await setCoach(fetchedCoach);\n      // setLeagueName(teamInfo.name)\n    })();\n  }, []);\n\n  //to fetch matches for selected team\n  //to submit form\n  const handleGetMatches = async (e) => {\n    e.preventDefault();\n    try {\n      const data = await fetchData(\n        `teams/${teamId}/matches?dateFrom=${from}&dateTo=${to}`\n      );\n      setMatches(data.matches);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //to clear old results list\n  //for new selected team\n  const handleClearResults = () => {\n    setMatches(\"\");\n  };\n\n  //set date from\n  const handleSetFrom = (e) => {\n    setFrom(e.target.value);\n  };\n\n  //set date to\n  const handleSetTo = (e) => {\n    setTo(e.target.value);\n  };\n\n  //reset searched data\n  const handleResetInput = () => {\n    setFrom(today);\n    setTo(\"\");\n  };\n\n  return (\n    <>\n      <TeamInfoComponent teamInfo={teamInfo} squad={squad} coach={coach} />\n      <TeamMatchesFormComponent\n        to={to}\n        from={from}\n        handleResetInput={handleResetInput}\n        getMatches={handleGetMatches}\n        handleSetFrom={handleSetFrom}\n        handleSetTo={handleSetTo}\n      />\n      <MatchesList handleClearResults={handleClearResults} matches={matches} />\n    </>\n  );\n};\n",["114","115"],"/home/egor/Projects/React/soccer_stat/src/containers/LeaguesContainer.js",[],"/home/egor/Projects/React/soccer_stat/src/containers/TeamsContainer.js",["116"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchData } from \"../api\";\nimport { SeasonPicker } from \"../components/SeasonPicker\";\nimport { TeamList } from \"../components/TeamList\";\n\nexport const TeamsContainer = () => {\n  //Current year for SaesonPicker\n  let today = new Date();\n  let year = today.getFullYear();\n\n  //To create new empty array\n  //According to FREE account - only 3 seasons\n  const zeros = new Array(3).fill(0);\n  const years = zeros.map((el, id) => year - id);\n\n  const [season, setSeason] = useState(year);\n  const [teams, setTeams] = useState([]);\n  let { leagueId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const data = await fetchData(`competitions/${leagueId}/teams`);\n      setTeams(data?.teams);\n    })();\n  }, []);\n\n  //To get teams according to SeasonPicker\n  const getTeams = async () => {\n    try {\n      const data = await fetchData(\n        `competitions/${leagueId}/teams?season=${season}`\n      );\n      setTeams(data?.teams);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //To set season\n  const handleSetSeason = (season) => {\n    setSeason(season);\n  };\n\n  return (\n    <div>\n      <SeasonPicker\n        handleSetSeason={handleSetSeason}\n        season={season}\n        years={years}\n        getTeams={getTeams}\n      />\n      <TeamList teams={teams} />\n    </div>\n  );\n};\n","/home/egor/Projects/React/soccer_stat/src/components/Main.jsx",["117"],"import { useHistory } from \"react-router-dom\";\n\nexport const Main = () => {\n  const history = useHistory();\n  return (\n    <div className=\"h-1/2 bg-gray-900 text-white text-xl md:hidden\">\n      <div className=\"h-1/2 w-full flex p-4\">\n        <div className=\"img-league w-1/2 rounded\"></div>\n        <div onClick={() => history.push(\"/leagues\")} className=\"link w-1/2 flex items-center justify-center\">\n          <div >\n            <h1 className=\"text-2xl\">Все</h1>\n            <h2 className=\"text-red-500 border-b-2 border-red-500\">лиги</h2>\n          </div>\n          \n        </div>\n      </div>\n\n      <hr className='mx-4' />\n      \n      <div className=\"h-1/2 w-full flex p-4\">\n        <div className=\"\" onClick={() => history.push(\"/todaysmatches\")} className=\"link  w-1/2 flex items-center justify-center\">\n          <div >\n            <h1 className=\"text-2xl\">Матчи</h1>\n            <h2 className=\"text-red-500 border-b-2 border-red-500\">сегодня</h2>\n          </div>\n        </div>\n        <div className=\"img-team w-1/2 rounded\"></div>\n      </div>\n    </div>\n  );\n};\n","/home/egor/Projects/React/soccer_stat/src/components/MatchesList.jsx",[],"/home/egor/Projects/React/soccer_stat/src/components/TeamMatchesFormComponent.jsx",[],"/home/egor/Projects/React/soccer_stat/src/components/LeaguesList.jsx",[],"/home/egor/Projects/React/soccer_stat/src/components/TeamList.jsx",[],"/home/egor/Projects/React/soccer_stat/src/components/Match.jsx",["118"],"/home/egor/Projects/React/soccer_stat/src/components/TeamComponent.jsx",["119"],"/home/egor/Projects/React/soccer_stat/src/App.js",[],["120","121"],"/home/egor/Projects/React/soccer_stat/src/components/Toolbar.jsx",[],"/home/egor/Projects/React/soccer_stat/src/pages/LeaguesPage.jsx",[],"/home/egor/Projects/React/soccer_stat/src/containers/MatchesListContainer.js",["122"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchData } from \"../api\";\nimport { MatchesList } from \"../components/MatchesList\";\nimport { TeamMatchesFormComponent } from \"../components/TeamMatchesFormComponent\";\n\nexport const MatchesListContainer = () => {\n  const { leagueId } = useParams();\n  const [matches, setMatches] = useState([]);\n\n  //Dates\n  const today = new Date().toISOString().slice(0, 10);\n  let nextDate = new Date();\n  nextDate.setDate(nextDate.getDate() + 6);\n  const formatedNextDate = nextDate.toISOString().slice(0, 10);\n\n  //Matches form\n  const [from, setFrom] = useState(today);\n  const [to, setTo] = useState(formatedNextDate);\n  const [leagueName, setLeagueName] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      const data = await fetchData(\n        `competitions/${leagueId}/matches?dateFrom=${today}&dateTo=${formatedNextDate}`\n      );\n      setMatches(data.matches);\n      setLeagueName(data.competition.name);\n    })();\n  }, []);\n\n  //fetch new data\n  const getData = async () => {\n    try {\n      const data = await fetchData(\n        `competitions/${leagueId}/matches?dateFrom=${from}&dateTo=${to}`\n      );\n      setMatches(data.matches);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //form submit -> load new data\n  //update matches data\n  const handleGetMatches = async (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  const handleResetInput = async () => {\n    setFrom(today);\n    setTo(formatedNextDate);\n    try {\n      const data = await fetchData(\n        `competitions/${leagueId}/matches?dateFrom=${from}&dateTo=${to}`\n      );\n      const matches = await data.matches;\n      setMatches(matches);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //to clear matches-list results\n  //if other team selected (select other team -> loading other team info)\n  //prevent prev. team matched-list\n  const handleClearResults = () => {\n    setMatches(\"\");\n  };\n\n  //set date from\n  const handleSetFrom = (e) => {\n    setFrom(e.target.value);\n  };\n\n  //set date to\n  const handleSetTo = (e) => {\n    setTo(e.target.value);\n  };\n\n  return (\n    <>\n      <TeamMatchesFormComponent\n        league={leagueName}\n        handleResetInput={handleResetInput}\n        from={from}\n        to={to}\n        handleSetTo={handleSetTo}\n        handleSetFrom={handleSetFrom}\n        getMatches={handleGetMatches}\n      />\n      <MatchesList handleClearResults={handleClearResults} matches={matches} />\n    </>\n  );\n};\n","/home/egor/Projects/React/soccer_stat/src/components/Head.jsx",[],"/home/egor/Projects/React/soccer_stat/src/pages/HomePage.jsx",[],["123","124"],"/home/egor/Projects/React/soccer_stat/src/components/League.jsx",["125"],"import { NavLink } from \"react-router-dom\";\n\nexport const League = ({league}) => {\n  return (\n    <div className=\"bg-gray-900 rounded-sm py-4 px-3 mt-2 mb-2 w-full md:w-2/3\">\n      <h1 className=\"text-center text-2xl border-b border-red-500 mx-10\">\n        <NavLink exact to={`/leagues/${league.id}`}>\n          {league.name}\n        </NavLink>\n      </h1>\n\n      <div className=\"flex flex-row justify-center items-center mt-1\">\n        <h2 className=\"inline-block mr-1\">{league.area.name}</h2>\n        {league.area.ensignUrl && (\n          <img\n            className=\"inline-block\"\n            width=\"50\"\n            src={league.area.ensignUrl}\n          />\n        )}\n      </div>\n\n      {league.currentSeason && (\n        <div className=\"flex flex-row items-baseline\">\n          <div className=\"w-1/2\">\n            <h2 className=\"mt-4 ml-10 text-md\"> Текущий сезон: </h2>\n          </div>\n          <div className=\"w-1/2\">\n            <h2>{league.currentSeason.startDate}</h2>\n            <h2>{league.currentSeason.endDate}</h2>\n          </div>\n          \n        </div>\n      )}\n      <div className='text-center' >\n            <NavLink className='mt-3 px-3 py-1 border text-red-500 border-red-500 hover:bg-red-500 hover:text-white inline-block' exact to={`/leagues/${league.id}/teams`}>Список команд</NavLink>\n          </div>\n    </div>\n  );\n};\n","/home/egor/Projects/React/soccer_stat/src/components/SeasonPicker.jsx",[],"/home/egor/Projects/React/soccer_stat/src/components/TeamInfoComponent.jsx",[],"/home/egor/Projects/React/soccer_stat/src/pages/TodaysMatchesPage.jsx",[],"/home/egor/Projects/React/soccer_stat/src/api/index.js",[],"/home/egor/Projects/React/soccer_stat/src/pages/TeamInfoPage.jsx",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":38,"column":6,"nodeType":"132","endLine":38,"endColumn":8,"suggestions":"133"},{"ruleId":"126","replacedBy":"134"},{"ruleId":"128","replacedBy":"135"},{"ruleId":"130","severity":1,"message":"136","line":26,"column":6,"nodeType":"132","endLine":26,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":21,"column":74,"nodeType":"140","endLine":21,"endColumn":130},{"ruleId":"141","severity":1,"message":"142","line":9,"column":11,"nodeType":"143","endLine":13,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":12,"column":9,"nodeType":"143","endLine":12,"endColumn":78},{"ruleId":"126","replacedBy":"144"},{"ruleId":"128","replacedBy":"145"},{"ruleId":"130","severity":1,"message":"146","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":8,"suggestions":"147"},{"ruleId":"126","replacedBy":"148"},{"ruleId":"128","replacedBy":"149"},{"ruleId":"141","severity":1,"message":"142","line":15,"column":11,"nodeType":"143","endLine":19,"endColumn":13},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'teamId'. Either include it or remove the dependency array.","ArrayExpression",["152"],["150"],["151"],"React Hook useEffect has a missing dependency: 'leagueId'. Either include it or remove the dependency array.",["153"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["150"],["151"],"React Hook useEffect has missing dependencies: 'formatedNextDate', 'leagueId', and 'today'. Either include them or remove the dependency array.",["154"],["150"],["151"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [teamId]",{"range":"161","text":"162"},"Update the dependencies array to be: [leagueId]",{"range":"163","text":"164"},"Update the dependencies array to be: [formatedNextDate, leagueId, today]",{"range":"165","text":"166"},[1319,1321],"[teamId]",[813,815],"[leagueId]",[1024,1026],"[formatedNextDate, leagueId, today]"]